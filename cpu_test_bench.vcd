$date
	Fri Nov 04 22:34:39 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module cpu_testbench $end
$var wire 8 ! result [7:0] $end
$var reg 19 " instruction [18:0] $end
$scope module my_CPU $end
$var wire 19 # opcode [18:0] $end
$var wire 8 $ result [7:0] $end
$var wire 3 % operation [2:0] $end
$var wire 8 & operand2 [7:0] $end
$var wire 8 ' operand1 [7:0] $end
$scope module myALU $end
$var wire 1 ( zero $end
$var wire 8 ) result [7:0] $end
$var wire 3 * operation [2:0] $end
$var wire 8 + op2 [7:0] $end
$var wire 8 , op1 [7:0] $end
$scope module ALU_add $end
$var wire 1 ( cin $end
$var wire 8 - sum [7:0] $end
$var wire 8 . op2 [7:0] $end
$var wire 8 / op1 [7:0] $end
$var wire 9 0 carrys [8:0] $end
$scope module _8_adders[0] $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 in1 $end
$var wire 1 4 in2 $end
$var wire 1 5 sum $end
$var wire 1 6 mid_sum $end
$var wire 1 7 mid_carry2 $end
$var wire 1 8 mid_carry1 $end
$scope module ha1 $end
$var wire 1 8 carry $end
$var wire 1 3 in1 $end
$var wire 1 4 in2 $end
$var wire 1 6 sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 7 carry $end
$var wire 1 1 in1 $end
$var wire 1 6 in2 $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$scope module _8_adders[1] $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; in1 $end
$var wire 1 < in2 $end
$var wire 1 = sum $end
$var wire 1 > mid_sum $end
$var wire 1 ? mid_carry2 $end
$var wire 1 @ mid_carry1 $end
$scope module ha1 $end
$var wire 1 @ carry $end
$var wire 1 ; in1 $end
$var wire 1 < in2 $end
$var wire 1 > sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 ? carry $end
$var wire 1 9 in1 $end
$var wire 1 > in2 $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope module _8_adders[2] $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C in1 $end
$var wire 1 D in2 $end
$var wire 1 E sum $end
$var wire 1 F mid_sum $end
$var wire 1 G mid_carry2 $end
$var wire 1 H mid_carry1 $end
$scope module ha1 $end
$var wire 1 H carry $end
$var wire 1 C in1 $end
$var wire 1 D in2 $end
$var wire 1 F sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 G carry $end
$var wire 1 A in1 $end
$var wire 1 F in2 $end
$var wire 1 E sum $end
$upscope $end
$upscope $end
$scope module _8_adders[3] $end
$var wire 1 I cin $end
$var wire 1 J cout $end
$var wire 1 K in1 $end
$var wire 1 L in2 $end
$var wire 1 M sum $end
$var wire 1 N mid_sum $end
$var wire 1 O mid_carry2 $end
$var wire 1 P mid_carry1 $end
$scope module ha1 $end
$var wire 1 P carry $end
$var wire 1 K in1 $end
$var wire 1 L in2 $end
$var wire 1 N sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 O carry $end
$var wire 1 I in1 $end
$var wire 1 N in2 $end
$var wire 1 M sum $end
$upscope $end
$upscope $end
$scope module _8_adders[4] $end
$var wire 1 Q cin $end
$var wire 1 R cout $end
$var wire 1 S in1 $end
$var wire 1 T in2 $end
$var wire 1 U sum $end
$var wire 1 V mid_sum $end
$var wire 1 W mid_carry2 $end
$var wire 1 X mid_carry1 $end
$scope module ha1 $end
$var wire 1 X carry $end
$var wire 1 S in1 $end
$var wire 1 T in2 $end
$var wire 1 V sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 W carry $end
$var wire 1 Q in1 $end
$var wire 1 V in2 $end
$var wire 1 U sum $end
$upscope $end
$upscope $end
$scope module _8_adders[5] $end
$var wire 1 Y cin $end
$var wire 1 Z cout $end
$var wire 1 [ in1 $end
$var wire 1 \ in2 $end
$var wire 1 ] sum $end
$var wire 1 ^ mid_sum $end
$var wire 1 _ mid_carry2 $end
$var wire 1 ` mid_carry1 $end
$scope module ha1 $end
$var wire 1 ` carry $end
$var wire 1 [ in1 $end
$var wire 1 \ in2 $end
$var wire 1 ^ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 _ carry $end
$var wire 1 Y in1 $end
$var wire 1 ^ in2 $end
$var wire 1 ] sum $end
$upscope $end
$upscope $end
$scope module _8_adders[6] $end
$var wire 1 a cin $end
$var wire 1 b cout $end
$var wire 1 c in1 $end
$var wire 1 d in2 $end
$var wire 1 e sum $end
$var wire 1 f mid_sum $end
$var wire 1 g mid_carry2 $end
$var wire 1 h mid_carry1 $end
$scope module ha1 $end
$var wire 1 h carry $end
$var wire 1 c in1 $end
$var wire 1 d in2 $end
$var wire 1 f sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 g carry $end
$var wire 1 a in1 $end
$var wire 1 f in2 $end
$var wire 1 e sum $end
$upscope $end
$upscope $end
$scope module _8_adders[7] $end
$var wire 1 i cin $end
$var wire 1 j cout $end
$var wire 1 k in1 $end
$var wire 1 l in2 $end
$var wire 1 m sum $end
$var wire 1 n mid_sum $end
$var wire 1 o mid_carry2 $end
$var wire 1 p mid_carry1 $end
$scope module ha1 $end
$var wire 1 p carry $end
$var wire 1 k in1 $end
$var wire 1 l in2 $end
$var wire 1 n sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 o carry $end
$var wire 1 i in1 $end
$var wire 1 n in2 $end
$var wire 1 m sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ALU_and $end
$var wire 8 q ans [7:0] $end
$var wire 8 r op2 [7:0] $end
$var wire 8 s op1 [7:0] $end
$upscope $end
$scope module ALU_decre $end
$var wire 8 t op [7:0] $end
$var wire 9 u borrows [8:0] $end
$var wire 8 v ans [7:0] $end
$scope module decrementer[0] $end
$var wire 1 w borrow $end
$var wire 1 x diff $end
$var wire 1 y in1 $end
$var wire 1 z in1_not $end
$var wire 1 { in2 $end
$upscope $end
$scope module decrementer[1] $end
$var wire 1 | borrow $end
$var wire 1 } diff $end
$var wire 1 ~ in1 $end
$var wire 1 !" in1_not $end
$var wire 1 "" in2 $end
$upscope $end
$scope module decrementer[2] $end
$var wire 1 #" borrow $end
$var wire 1 $" diff $end
$var wire 1 %" in1 $end
$var wire 1 &" in1_not $end
$var wire 1 '" in2 $end
$upscope $end
$scope module decrementer[3] $end
$var wire 1 (" borrow $end
$var wire 1 )" diff $end
$var wire 1 *" in1 $end
$var wire 1 +" in1_not $end
$var wire 1 ," in2 $end
$upscope $end
$scope module decrementer[4] $end
$var wire 1 -" borrow $end
$var wire 1 ." diff $end
$var wire 1 /" in1 $end
$var wire 1 0" in1_not $end
$var wire 1 1" in2 $end
$upscope $end
$scope module decrementer[5] $end
$var wire 1 2" borrow $end
$var wire 1 3" diff $end
$var wire 1 4" in1 $end
$var wire 1 5" in1_not $end
$var wire 1 6" in2 $end
$upscope $end
$scope module decrementer[6] $end
$var wire 1 7" borrow $end
$var wire 1 8" diff $end
$var wire 1 9" in1 $end
$var wire 1 :" in1_not $end
$var wire 1 ;" in2 $end
$upscope $end
$scope module decrementer[7] $end
$var wire 1 <" borrow $end
$var wire 1 =" diff $end
$var wire 1 >" in1 $end
$var wire 1 ?" in1_not $end
$var wire 1 @" in2 $end
$upscope $end
$upscope $end
$scope module ALU_incre $end
$var wire 8 A" op [7:0] $end
$var wire 9 B" carrys [8:0] $end
$var wire 8 C" ans [7:0] $end
$scope module incrementer[0] $end
$var wire 1 D" carry $end
$var wire 1 E" in1 $end
$var wire 1 F" in2 $end
$var wire 1 G" sum $end
$upscope $end
$scope module incrementer[1] $end
$var wire 1 H" carry $end
$var wire 1 I" in1 $end
$var wire 1 J" in2 $end
$var wire 1 K" sum $end
$upscope $end
$scope module incrementer[2] $end
$var wire 1 L" carry $end
$var wire 1 M" in1 $end
$var wire 1 N" in2 $end
$var wire 1 O" sum $end
$upscope $end
$scope module incrementer[3] $end
$var wire 1 P" carry $end
$var wire 1 Q" in1 $end
$var wire 1 R" in2 $end
$var wire 1 S" sum $end
$upscope $end
$scope module incrementer[4] $end
$var wire 1 T" carry $end
$var wire 1 U" in1 $end
$var wire 1 V" in2 $end
$var wire 1 W" sum $end
$upscope $end
$scope module incrementer[5] $end
$var wire 1 X" carry $end
$var wire 1 Y" in1 $end
$var wire 1 Z" in2 $end
$var wire 1 [" sum $end
$upscope $end
$scope module incrementer[6] $end
$var wire 1 \" carry $end
$var wire 1 ]" in1 $end
$var wire 1 ^" in2 $end
$var wire 1 _" sum $end
$upscope $end
$scope module incrementer[7] $end
$var wire 1 `" carry $end
$var wire 1 a" in1 $end
$var wire 1 b" in2 $end
$var wire 1 c" sum $end
$upscope $end
$upscope $end
$scope module ALU_multiplexer $end
$var wire 8 d" in0 [7:0] $end
$var wire 8 e" in1 [7:0] $end
$var wire 8 f" in3 [7:0] $end
$var wire 8 g" in4 [7:0] $end
$var wire 8 h" in5 [7:0] $end
$var wire 3 i" select [0:2] $end
$var wire 8 j" out [7:0] $end
$var wire 8 k" in7 [7:0] $end
$var wire 8 l" in6 [7:0] $end
$var wire 8 m" in2 [7:0] $end
$scope module m1 $end
$var wire 8 n" in0 [7:0] $end
$var wire 8 o" in1 [7:0] $end
$var wire 8 p" in3 [7:0] $end
$var wire 2 q" select [0:1] $end
$var wire 8 r" out [7:0] $end
$var wire 8 s" in2 [7:0] $end
$scope module m1 $end
$var wire 8 t" in0 [7:0] $end
$var wire 8 u" in1 [7:0] $end
$var wire 8 v" nots2 [7:0] $end
$var wire 1 w" notselect $end
$var wire 8 x" out [7:0] $end
$var wire 8 y" s1 [7:0] $end
$var wire 1 z" select $end
$upscope $end
$scope module m2 $end
$var wire 8 {" in1 [7:0] $end
$var wire 8 |" nots2 [7:0] $end
$var wire 1 }" notselect $end
$var wire 8 ~" out [7:0] $end
$var wire 8 !# s1 [7:0] $end
$var wire 1 "# select $end
$var wire 8 ## in0 [7:0] $end
$upscope $end
$scope module m3 $end
$var wire 8 $# in0 [7:0] $end
$var wire 8 %# in1 [7:0] $end
$var wire 8 &# nots2 [7:0] $end
$var wire 1 '# notselect $end
$var wire 8 (# out [7:0] $end
$var wire 8 )# s1 [7:0] $end
$var wire 1 *# select $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 8 +# in0 [7:0] $end
$var wire 8 ,# in1 [7:0] $end
$var wire 2 -# select [0:1] $end
$var wire 8 .# out [7:0] $end
$var wire 8 /# in3 [7:0] $end
$var wire 8 0# in2 [7:0] $end
$scope module m1 $end
$var wire 8 1# in0 [7:0] $end
$var wire 8 2# in1 [7:0] $end
$var wire 8 3# nots2 [7:0] $end
$var wire 1 4# notselect $end
$var wire 8 5# out [7:0] $end
$var wire 8 6# s1 [7:0] $end
$var wire 1 7# select $end
$upscope $end
$scope module m2 $end
$var wire 8 8# nots2 [7:0] $end
$var wire 1 9# notselect $end
$var wire 8 :# out [7:0] $end
$var wire 8 ;# s1 [7:0] $end
$var wire 1 <# select $end
$var wire 8 =# in1 [7:0] $end
$var wire 8 ># in0 [7:0] $end
$upscope $end
$scope module m3 $end
$var wire 8 ?# in0 [7:0] $end
$var wire 8 @# in1 [7:0] $end
$var wire 8 A# nots2 [7:0] $end
$var wire 1 B# notselect $end
$var wire 8 C# out [7:0] $end
$var wire 8 D# s1 [7:0] $end
$var wire 1 E# select $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 8 F# in0 [7:0] $end
$var wire 8 G# in1 [7:0] $end
$var wire 8 H# nots2 [7:0] $end
$var wire 1 I# notselect $end
$var wire 8 J# out [7:0] $end
$var wire 8 K# s1 [7:0] $end
$var wire 1 L# select $end
$upscope $end
$upscope $end
$scope module ALU_not $end
$var wire 8 M# ans [7:0] $end
$var wire 8 N# op1 [7:0] $end
$upscope $end
$scope module ALU_or $end
$var wire 8 O# ans [7:0] $end
$var wire 8 P# op2 [7:0] $end
$var wire 8 Q# op1 [7:0] $end
$upscope $end
$scope module ALU_subtr $end
$var wire 1 R# one $end
$var wire 8 S# op2_comp [7:0] $end
$var wire 8 T# op2 [7:0] $end
$var wire 8 U# op1 [7:0] $end
$var wire 8 V# diff [7:0] $end
$scope module subtr_not $end
$var wire 8 W# ans [7:0] $end
$var wire 8 X# op1 [7:0] $end
$upscope $end
$scope module subtract_by_adding $end
$var wire 1 R# cin $end
$var wire 8 Y# op2 [7:0] $end
$var wire 8 Z# sum [7:0] $end
$var wire 8 [# op1 [7:0] $end
$var wire 9 \# carrys [8:0] $end
$scope module _8_adders[0] $end
$var wire 1 ]# cin $end
$var wire 1 ^# cout $end
$var wire 1 _# in1 $end
$var wire 1 `# in2 $end
$var wire 1 a# sum $end
$var wire 1 b# mid_sum $end
$var wire 1 c# mid_carry2 $end
$var wire 1 d# mid_carry1 $end
$scope module ha1 $end
$var wire 1 d# carry $end
$var wire 1 _# in1 $end
$var wire 1 `# in2 $end
$var wire 1 b# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 c# carry $end
$var wire 1 ]# in1 $end
$var wire 1 b# in2 $end
$var wire 1 a# sum $end
$upscope $end
$upscope $end
$scope module _8_adders[1] $end
$var wire 1 e# cin $end
$var wire 1 f# cout $end
$var wire 1 g# in1 $end
$var wire 1 h# in2 $end
$var wire 1 i# sum $end
$var wire 1 j# mid_sum $end
$var wire 1 k# mid_carry2 $end
$var wire 1 l# mid_carry1 $end
$scope module ha1 $end
$var wire 1 l# carry $end
$var wire 1 g# in1 $end
$var wire 1 h# in2 $end
$var wire 1 j# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 k# carry $end
$var wire 1 e# in1 $end
$var wire 1 j# in2 $end
$var wire 1 i# sum $end
$upscope $end
$upscope $end
$scope module _8_adders[2] $end
$var wire 1 m# cin $end
$var wire 1 n# cout $end
$var wire 1 o# in1 $end
$var wire 1 p# in2 $end
$var wire 1 q# sum $end
$var wire 1 r# mid_sum $end
$var wire 1 s# mid_carry2 $end
$var wire 1 t# mid_carry1 $end
$scope module ha1 $end
$var wire 1 t# carry $end
$var wire 1 o# in1 $end
$var wire 1 p# in2 $end
$var wire 1 r# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 s# carry $end
$var wire 1 m# in1 $end
$var wire 1 r# in2 $end
$var wire 1 q# sum $end
$upscope $end
$upscope $end
$scope module _8_adders[3] $end
$var wire 1 u# cin $end
$var wire 1 v# cout $end
$var wire 1 w# in1 $end
$var wire 1 x# in2 $end
$var wire 1 y# sum $end
$var wire 1 z# mid_sum $end
$var wire 1 {# mid_carry2 $end
$var wire 1 |# mid_carry1 $end
$scope module ha1 $end
$var wire 1 |# carry $end
$var wire 1 w# in1 $end
$var wire 1 x# in2 $end
$var wire 1 z# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 {# carry $end
$var wire 1 u# in1 $end
$var wire 1 z# in2 $end
$var wire 1 y# sum $end
$upscope $end
$upscope $end
$scope module _8_adders[4] $end
$var wire 1 }# cin $end
$var wire 1 ~# cout $end
$var wire 1 !$ in1 $end
$var wire 1 "$ in2 $end
$var wire 1 #$ sum $end
$var wire 1 $$ mid_sum $end
$var wire 1 %$ mid_carry2 $end
$var wire 1 &$ mid_carry1 $end
$scope module ha1 $end
$var wire 1 &$ carry $end
$var wire 1 !$ in1 $end
$var wire 1 "$ in2 $end
$var wire 1 $$ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 %$ carry $end
$var wire 1 }# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 #$ sum $end
$upscope $end
$upscope $end
$scope module _8_adders[5] $end
$var wire 1 '$ cin $end
$var wire 1 ($ cout $end
$var wire 1 )$ in1 $end
$var wire 1 *$ in2 $end
$var wire 1 +$ sum $end
$var wire 1 ,$ mid_sum $end
$var wire 1 -$ mid_carry2 $end
$var wire 1 .$ mid_carry1 $end
$scope module ha1 $end
$var wire 1 .$ carry $end
$var wire 1 )$ in1 $end
$var wire 1 *$ in2 $end
$var wire 1 ,$ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 -$ carry $end
$var wire 1 '$ in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 +$ sum $end
$upscope $end
$upscope $end
$scope module _8_adders[6] $end
$var wire 1 /$ cin $end
$var wire 1 0$ cout $end
$var wire 1 1$ in1 $end
$var wire 1 2$ in2 $end
$var wire 1 3$ sum $end
$var wire 1 4$ mid_sum $end
$var wire 1 5$ mid_carry2 $end
$var wire 1 6$ mid_carry1 $end
$scope module ha1 $end
$var wire 1 6$ carry $end
$var wire 1 1$ in1 $end
$var wire 1 2$ in2 $end
$var wire 1 4$ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 5$ carry $end
$var wire 1 /$ in1 $end
$var wire 1 4$ in2 $end
$var wire 1 3$ sum $end
$upscope $end
$upscope $end
$scope module _8_adders[7] $end
$var wire 1 7$ cin $end
$var wire 1 8$ cout $end
$var wire 1 9$ in1 $end
$var wire 1 :$ in2 $end
$var wire 1 ;$ sum $end
$var wire 1 <$ mid_sum $end
$var wire 1 =$ mid_carry2 $end
$var wire 1 >$ mid_carry1 $end
$scope module ha1 $end
$var wire 1 >$ carry $end
$var wire 1 9$ in1 $end
$var wire 1 :$ in2 $end
$var wire 1 <$ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 =$ carry $end
$var wire 1 7$ in1 $end
$var wire 1 <$ in2 $end
$var wire 1 ;$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module myCU $end
$var wire 19 ?$ opcode [18:0] $end
$var wire 3 @$ operation [2:0] $end
$var wire 8 A$ operand2 [7:0] $end
$var wire 8 B$ operand1 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 B$
b11111111 A$
b1 @$
b10000000011111111 ?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
1a#
0`#
0_#
0^#
1]#
b1 \#
b0 [#
b1 Z#
b0 Y#
b11111111 X#
b0 W#
b1 V#
b0 U#
b11111111 T#
b0 S#
1R#
b0 Q#
b11111111 P#
b11111111 O#
b0 N#
b11111111 M#
0L#
b0 K#
b11111111 J#
1I#
b11111111 H#
b0 G#
b11111111 F#
0E#
b0 D#
b0 C#
1B#
b0 A#
b11111111 @#
b0 ?#
b11111111 >#
b11111111 =#
1<#
b11111111 ;#
b11111111 :#
09#
b0 8#
17#
b0 6#
b0 5#
04#
b0 3#
b0 2#
b11111111 1#
b11111111 0#
b11111111 /#
b0 .#
b1 -#
b0 ,#
b11111111 +#
0*#
b0 )#
b11111111 (#
1'#
b11111111 &#
b1 %#
b11111111 $#
b1 ##
1"#
b1 !#
b1 ~"
0}"
b0 |"
b1 {"
1z"
b11111111 y"
b11111111 x"
0w"
b0 v"
b11111111 u"
b0 t"
b1 s"
b11111111 r"
b1 q"
b1 p"
b11111111 o"
b0 n"
b1 m"
b11111111 l"
b11111111 k"
b11111111 j"
b1 i"
b0 h"
b11111111 g"
b1 f"
b11111111 e"
b0 d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
1G"
1F"
0E"
0D"
b1 C"
b1 B"
b0 A"
1@"
1?"
0>"
1="
1<"
1;"
1:"
09"
18"
17"
16"
15"
04"
13"
12"
11"
10"
0/"
1."
1-"
1,"
1+"
0*"
1)"
1("
1'"
1&"
0%"
1$"
1#"
1""
1!"
0~
1}
1|
1{
1z
0y
1x
1w
b11111111 v
b111111111 u
b0 t
b0 s
b11111111 r
b0 q
0p
0o
1n
1m
1l
0k
0j
0i
0h
0g
1f
1e
1d
0c
0b
0a
0`
0_
1^
1]
1\
0[
0Z
0Y
0X
0W
1V
1U
1T
0S
0R
0Q
0P
0O
1N
1M
1L
0K
0J
0I
0H
0G
1F
1E
1D
0C
0B
0A
0@
0?
1>
1=
1<
0;
0:
09
08
07
16
15
14
03
02
01
b0 0
b0 /
b11111111 .
b11111111 -
b0 ,
b11111111 +
b1 *
b11111111 )
0(
b0 '
b11111111 &
b1 %
b11111111 $
b10000000011111111 #
b10000000011111111 "
b11111111 !
$end
#20
b1 !
b1 $
b1 )
b1 j"
b1 J#
b1 H#
b11111111 5#
b11111111 ?#
b1 r"
b1 (#
b1 F#
b11111111 3#
b11111111 8#
b11111111 :#
b11111111 @#
b11111111 .#
b11111111 C#
b11111111 G#
b0 x"
b0 $#
b1 |"
b1 ~"
b1 %#
b0 &#
14#
19#
b0 ;#
0B#
b11111111 D#
1w"
b0 y"
1}"
b0 !#
0'#
b1 )#
07#
0<#
1E#
0z"
0"#
1*#
b10 -#
b10 q"
b10 %
b10 *
b10 i"
b10 @$
b100000000011111111 "
b100000000011111111 #
b100000000011111111 ?$
#40
b0 5#
b0 ?#
b0 3#
b0 8#
b11111111 x"
b11111111 $#
b0 |"
04#
09#
b11111111 ;#
0w"
b11111111 y"
0}"
b1 !#
17#
1<#
1z"
1"#
b11 -#
b11 q"
b11 %
b11 *
b11 i"
b11 @$
b110000000011111111 "
b110000000011111111 #
b110000000011111111 ?$
#60
b11111111 A#
b11111111 5#
b11111111 ?#
b11111111 3#
b11111111 8#
b11111111 :#
b11111111 @#
b11111111 .#
b11111111 C#
b11111111 G#
b0 x"
b0 $#
b1 |"
b1 ~"
b1 %#
b0 &#
b0 r"
b0 (#
b0 F#
b0 H#
b11111111 !
b11111111 $
b11111111 )
b11111111 j"
b11111111 J#
14#
19#
b0 ;#
1B#
b0 D#
1w"
b0 y"
1}"
b0 !#
1'#
b0 )#
0I#
b11111111 K#
07#
0<#
0E#
0z"
0"#
0*#
1L#
b0 -#
b0 q"
b100 %
b100 *
b100 i"
b100 @$
b1000000000011111111 "
b1000000000011111111 #
b1000000000011111111 ?$
#80
b0 !
b0 $
b0 )
b0 j"
b0 J#
b0 K#
b0 .#
b0 C#
b0 G#
b0 A#
b11111111 r"
b11111111 (#
b11111111 F#
b0 5#
b0 ?#
b11111111 &#
b0 3#
b0 8#
b11111111 x"
b11111111 $#
b0 |"
04#
09#
b11111111 ;#
0w"
b11111111 y"
0}"
b1 !#
17#
1<#
1z"
1"#
b1 -#
b1 q"
b101 %
b101 *
b101 i"
b101 @$
b1010000000011111111 "
b1010000000011111111 #
b1010000000011111111 ?$
#100
b11111111 !
b11111111 $
b11111111 )
b11111111 j"
b11111111 J#
b11111111 5#
b11111111 ?#
b11111111 K#
b1 r"
b1 (#
b1 F#
b11111111 3#
b11111111 8#
b11111111 :#
b11111111 @#
b11111111 .#
b11111111 C#
b11111111 G#
b0 x"
b0 $#
b1 |"
b1 ~"
b1 %#
b0 &#
14#
19#
b0 ;#
0B#
b11111111 D#
1w"
b0 y"
1}"
b0 !#
0'#
b1 )#
07#
0<#
1E#
0z"
0"#
1*#
b10 -#
b10 q"
b110 %
b110 *
b110 i"
b110 @$
b1100000000011111111 "
b1100000000011111111 #
b1100000000011111111 ?$
#120
b0 5#
b0 ?#
b0 3#
b0 8#
b11111111 x"
b11111111 $#
b0 |"
04#
09#
b11111111 ;#
0w"
b11111111 y"
0}"
b1 !#
17#
1<#
1z"
1"#
b11 -#
b11 q"
b111 %
b111 *
b111 i"
b111 @$
b1110000000011111111 "
b1110000000011111111 #
b1110000000011111111 ?$
#140
06"
0."
0-"
18$
01"
1=$
17$
0)"
0("
0="
0<"
1O"
0,"
0@"
10$
1N"
1i#
1q#
15$
0$"
0#"
08"
07"
1e#
1m#
1/$
1H"
0""
0'"
0;"
b110111 x"
b110111 $#
b0 .#
b0 C#
b0 G#
b110111 &#
b110111 r"
b110111 (#
b110111 F#
b100100 ~"
b100100 %#
1J"
1y#
03$
b1111 m"
b1111 s"
b1111 ##
b1111 V#
b1111 Z#
0;$
b110111 y"
b110111 H#
b110111 !
b110111 $
b110111 )
b110111 j"
b110111 J#
1B#
b0 D#
1'#
b0 )#
1($
1f#
b111000111 \#
1^#
b11011100 :#
b11011100 @#
b100100 !#
02"
0|
b1 u
0w
1z#
14$
1<$
0m
0e
b110111 -
b110111 e"
b110111 o"
b110111 u"
0M
1I#
b0 K#
0E#
0*#
1.$
1l#
1d#
b11011100 ;#
1["
0K"
b100100 C"
b100100 f"
b100100 p"
b100100 {"
0G"
b111 B"
1D"
13"
05"
1}
0!"
b100010 v
b100010 g"
b100010 +#
b100010 1#
0x
0z
1`#
1h#
1x#
1*$
12$
1:$
0n
0f
0N
0L#
b1 -#
b1 q"
1)$
1g#
1_#
b11011100 k"
b11011100 /#
b11011100 =#
b11011100 M#
1Y"
1I"
1E"
14"
1~
1y
1[
1;
13
b11101011 S#
b11101011 W#
b11101011 Y#
b110111 l"
b110111 0#
b110111 >#
b110111 O#
0l
0d
0\
0L
0<
04
b1 %
b1 *
b1 i"
b1 @$
b100011 '
b100011 ,
b100011 /
b100011 s
b100011 t
b100011 A"
b100011 N#
b100011 Q#
b100011 U#
b100011 [#
b100011 B$
b10100 &
b10100 +
b10100 .
b10100 r
b10100 P#
b10100 T#
b10100 X#
b10100 A$
b10010001100010100 "
b10010001100010100 #
b10010001100010100 ?$
#160
b1111 !
b1111 $
b1111 )
b1111 j"
b1111 J#
b1111 H#
b100010 5#
b100010 ?#
b1111 r"
b1111 (#
b1111 F#
b100010 3#
b110111 8#
b110111 :#
b110111 @#
b110111 .#
b110111 C#
b110111 G#
b0 x"
b0 $#
b1111 |"
b1111 ~"
b1111 %#
b0 &#
14#
19#
b0 ;#
0B#
b110111 D#
1w"
b0 y"
1}"
b0 !#
0'#
b1111 )#
07#
0<#
1E#
0z"
0"#
1*#
b10 -#
b10 q"
b10 %
b10 *
b10 i"
b10 @$
b100010001100010100 "
b100010001100010100 #
b100010001100010100 ?$
#180
b100100 !
b100100 $
b100100 )
b100100 j"
b100100 J#
b100100 H#
b11011100 .#
b11011100 C#
b11011100 G#
b100100 r"
b100100 (#
b100100 F#
b0 5#
b0 ?#
b11011100 D#
b100100 )#
b0 3#
b0 8#
b11011100 :#
b11011100 @#
b110111 x"
b110111 $#
b0 |"
b100100 ~"
b100100 %#
04#
09#
b11011100 ;#
0w"
b110111 y"
0}"
b100100 !#
17#
1<#
1z"
1"#
b11 -#
b11 q"
b11 %
b11 *
b11 i"
b11 @$
b110010001100010100 "
b110010001100010100 #
b110010001100010100 ?$
#200
b100010 A#
b100010 5#
b100010 ?#
b100010 3#
b110111 8#
b110111 :#
b110111 @#
b100010 .#
b100010 C#
b100010 G#
b0 x"
b0 $#
b1111 |"
b1111 ~"
b1111 %#
b0 &#
b0 r"
b0 (#
b0 F#
b0 H#
b100010 !
b100010 $
b100010 )
b100010 j"
b100010 J#
14#
19#
b0 ;#
1B#
b0 D#
1w"
b0 y"
1}"
b0 !#
1'#
b0 )#
0I#
b100010 K#
07#
0<#
0E#
0z"
0"#
0*#
1L#
b0 -#
b0 q"
b100 %
b100 *
b100 i"
b100 @$
b1000010001100010100 "
b1000010001100010100 #
b1000010001100010100 ?$
#220
b0 !
b0 $
b0 )
b0 j"
b0 J#
b0 K#
b0 .#
b0 C#
b0 G#
b0 A#
b110111 r"
b110111 (#
b110111 F#
b0 5#
b0 ?#
b110111 &#
b0 3#
b0 8#
b11011100 :#
b11011100 @#
b110111 x"
b110111 $#
b0 |"
b100100 ~"
b100100 %#
04#
09#
b11011100 ;#
0w"
b110111 y"
0}"
b100100 !#
17#
1<#
1z"
1"#
b1 -#
b1 q"
b101 %
b101 *
b101 i"
b101 @$
b1010010001100010100 "
b1010010001100010100 #
b1010010001100010100 ?$
#240
b110111 !
b110111 $
b110111 )
b110111 j"
b110111 J#
b100010 5#
b100010 ?#
b110111 K#
b1111 r"
b1111 (#
b1111 F#
b100010 3#
b110111 8#
b110111 :#
b110111 @#
b110111 .#
b110111 C#
b110111 G#
b0 x"
b0 $#
b1111 |"
b1111 ~"
b1111 %#
b0 &#
14#
19#
b0 ;#
0B#
b110111 D#
1w"
b0 y"
1}"
b0 !#
0'#
b1111 )#
07#
0<#
1E#
0z"
0"#
1*#
b10 -#
b10 q"
b110 %
b110 *
b110 i"
b110 @$
b1100010001100010100 "
b1100010001100010100 #
b1100010001100010100 ?$
#260
b11011100 !
b11011100 $
b11011100 )
b11011100 j"
b11011100 J#
b11011100 K#
b11011100 .#
b11011100 C#
b11011100 G#
b100100 r"
b100100 (#
b100100 F#
b0 5#
b0 ?#
b11011100 D#
b100100 )#
b0 3#
b0 8#
b11011100 :#
b11011100 @#
b110111 x"
b110111 $#
b0 |"
b100100 ~"
b100100 %#
04#
09#
b11011100 ;#
0w"
b110111 y"
0}"
b100100 !#
17#
1<#
1z"
1"#
b11 -#
b11 q"
b111 %
b111 *
b111 i"
b111 @$
b1110010001100010100 "
b1110010001100010100 #
b1110010001100010100 ?$
#280
